{"remainingRequest":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/babel-loader/lib/index.js!/home/user1/桌面/vue/D2AdminICE-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user1/桌面/vue/D2AdminICE-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user1/桌面/vue/D2AdminICE-master/src/pages/Orders/Orders.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user1/桌面/vue/D2AdminICE-master/src/pages/Orders/Orders.vue","mtime":1558518323951},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/user1/\\u684C\\u9762/vue/D2AdminICE-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/user1/\\u684C\\u9762/vue/D2AdminICE-master/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddDialog from \"./components/AddDialog\";\nimport { mapActions } from \"vuex\";\nimport util from \"@/libs/util.js\";\nexport default {\n  components: {\n    \"add-button\": AddDialog\n  },\n  name: \"OrdersForm\",\n  data: function data() {\n    return {\n      columns: [{\n        title: \"订单编号\",\n        dataIndex: \"code\",\n        key: \"code\"\n      }, {\n        title: \"客户名词\",\n        dataIndex: \"customerName\",\n        key: \"customerName\"\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"creationTime\",\n        key: \"creationTime\",\n        formatter: this.formatDate\n      }, {\n        title: \"订单状态\",\n        dataIndex: \"status\",\n        key: \"status\",\n        filters: [{\n          text: \"新增\",\n          value: 1\n        }, {\n          text: \"已付款\",\n          value: 10\n        }, {\n          text: \"已完成\",\n          value: 20\n        }],\n        filterMethod: function filterMethod(value, row) {\n          return row.isActive === value;\n        },\n        filterPlacement: \"bottom-end\"\n      }, {\n        title: \"上次登录时间\",\n        dataIndex: \"lastLoginTime\",\n        key: \"lastLoginTime\",\n        width: 240,\n        sortable: true,\n        formatter: this.formatDate\n      }],\n      data: [],\n      loading: true,\n      pagination: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 0,\n        layout: \"prev, pager, next, total\"\n      },\n      options: {\n        stripe: true\n      },\n      rowHandle: {\n        columnHeader: \"操作\",\n        edit: {\n          icon: \"el-icon-edit\",\n          text: \"编辑\",\n          size: \"small\"\n        },\n        remove: {\n          icon: \"el-icon-delete\",\n          text: \"删除\",\n          type: \"danger\",\n          size: \"small\",\n          disabled: function disabled(index, row) {\n            if (row.OrdersName == \"admin\") {\n              return true;\n            }\n\n            return false;\n          }\n        }\n      },\n      formTemplate: {\n        OrdersName: {\n          title: \"用户名\",\n          component: {\n            name: \"el-input\",\n            disabled: true,\n            span: 12\n          }\n        },\n        id: {\n          title: \"ID\",\n          component: {\n            name: \"el-input\",\n            disabled: true,\n            span: 12\n          }\n        },\n        name: {\n          title: \"姓\",\n          component: {\n            name: \"el-input\",\n            clearable: true,\n            span: 6\n          }\n        },\n        surname: {\n          title: \"名\",\n          component: {\n            name: \"el-input\",\n            clearable: true,\n            span: 6\n          }\n        },\n        fullName: {\n          title: \"全称\",\n          component: {\n            name: \"el-input\",\n            disabled: true,\n            span: 6\n          }\n        },\n        emailAddress: {\n          title: \"邮箱\",\n          component: {\n            name: \"el-input\",\n            clearable: true\n          }\n        },\n        roleNames: {\n          title: \"角色\",\n          component: {\n            name: \"el-input\",\n            visible: false\n          },\n          visible: false\n        },\n        lastLoginTime: {\n          title: \"上次登录时间\",\n          component: {\n            name: \"el-date-picker\",\n            type: \"datetime\",\n            disabled: true,\n            span: 8\n          }\n        },\n        creationTime: {\n          title: \"创建时间\",\n          component: {\n            name: \"el-date-picker\",\n            type: \"datetime\",\n            disabled: true,\n            span: 8\n          }\n        },\n        isActive: {\n          title: \"有效\",\n          component: {\n            name: \"el-switch\"\n          }\n        }\n      },\n      formOptions: {\n        labelWidth: \"120px\",\n        labelPosition: \"right\",\n        saveLoading: false\n      },\n      formRules: {\n        OrdersName: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入姓\",\n          trigger: \"blur\"\n        }],\n        surname: [{\n          required: true,\n          message: \"请输入名\",\n          trigger: \"blur\"\n        }],\n        emailAddress: [{\n          required: true,\n          message: \"请输入电子邮箱\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData(this.pagination.currentPage, this.pagination.pageSize);\n  },\n  methods: _objectSpread({}, mapActions(\"d2admin/orders\", [\"GetAllOrders\", \"OrdersCreateOrUpdate\", \"OrdersDel\"]), {\n    paginationCurrentChange: function paginationCurrentChange(currentPage) {\n      this.pagination.currentPage = currentPage;\n      this.fetchData(currentPage, this.pagination.pageSize);\n    },\n    formatDate: function formatDate(row, column, cellValue, index) {\n      var timestr = new Date(cellValue);\n      return util.Dtformat(\"yyyy-MM-dd hh:mm:ss\", timestr);\n    },\n    fetchData: function fetchData(page, pageSize) {\n      var _this = this;\n\n      this.loading = true;\n      this.GetAllOrders({\n        SkipCount: (page - 1) * pageSize,\n        MaxResultCount: pageSize\n      }).then(function (res) {\n        _this.data = res.result;\n        _this.pagination.total = res.result.length;\n        _this.loading = false;\n      }).catch(function (err) {\n        console.log(\"err\", err);\n        _this.loading = false;\n      });\n    },\n    handleRowAdd: function handleRowAdd(row, done) {\n      var _this2 = this;\n\n      this.formOptions.saveLoading = true;\n      this.OrdersCreateOrUpdate(row).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(res);\n\n                  _this2.$message({\n                    message: \"保存成功\",\n                    type: \"success\"\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      done({\n        address: \"我是通过done事件传入的数据！\"\n      });\n      this.formOptions.saveLoading = false;\n    },\n    handleDialogCancel: function handleDialogCancel(done) {\n      this.$message({\n        message: \"取消保存\",\n        type: \"warning\"\n      });\n      done();\n    },\n    handleDialogEdit: function handleDialogEdit(datas, done) {\n      var _this3 = this;\n\n      this.formOptions.saveLoading = true;\n      this.OrdersCreateOrUpdate(datas.row).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(res) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  console.log(res);\n\n                  _this3.$message({\n                    message: \"保存成功\",\n                    type: \"success\"\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      this.formOptions.saveLoading = false;\n      done();\n    },\n    handleRowRemove: function handleRowRemove(_ref3, done) {\n      var _this4 = this;\n\n      var index = _ref3.index,\n          row = _ref3.row;\n      this.OrdersDel({\n        id: row.id\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(res) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this4.$message({\n                    message: \"删除成功\",\n                    type: \"success\"\n                  });\n\n                case 1:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      done();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      console.log(selection);\n    },\n    refreshData: function refreshData() {\n      this.loading = true;\n      this.fetchData(this.pagination.currentPage, this.pagination.pageSize);\n    },\n    handleAddDialog: function handleAddDialog() {\n      console.log(AddDialog);\n      AddDialog.dialogFormVisible = true;\n    }\n  })\n};",{"version":3,"sources":["Orders.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- d2-container 文档 https://doc.d2admin.fairyever.com/zh/sys-components/container.html -->\n  <d2-container class=\"page-Orders\">\n    <template slot=\"header\">管理员</template>\n    <template>\n      <div>\n        <d2-crud\n          :columns=\"columns\"\n          :data=\"data\"\n          :loading=\"loading\"\n          :pagination=\"pagination\"\n          :options=\"options\"\n          :form-template=\"formTemplate\"\n          :form-options=\"formOptions\"\n          :form-rules=\"formRules\"\n          :rowHandle=\"rowHandle\"\n          selection-row\n          @selection-change=\"handleSelectionChange\"\n          @row-add=\"handleRowAdd\"\n          @row-edit=\"handleDialogEdit\"\n          @row-remove=\"handleRowRemove\"\n          @dialog-cancel=\"handleDialogCancel\"\n          @pagination-current-change=\"paginationCurrentChange\"\n        >\n          <add-button slot=\"headerButton\"/>\n          <el-button slot=\"headerButton\" icon=\"el-icon-refresh\" size=\"small\" type=\"success\" @click=\"refreshData\">刷新</el-button>\n          <el-button slot=\"headerButton\" type=\"danger\" icon=\"el-icon-delete\" size=\"small\">删除</el-button>\n        </d2-crud>\n      </div>\n    </template>\n    <template slot=\"footer\">footer</template>\n  </d2-container>\n</template>\n\n<script>\nimport AddDialog from \"./components/AddDialog\";\nimport { mapActions } from \"vuex\";\nimport util from \"@/libs/util.js\";\nexport default {\n  components: {\n    \"add-button\": AddDialog\n  },\n  name: \"OrdersForm\",\n  data() {\n    return {\n      columns: [\n        {\n          title: \"订单编号\",\n          dataIndex: \"code\",\n          key: \"code\"\n        },\n        {\n          title: \"客户名词\",\n          dataIndex: \"customerName\",\n          key: \"customerName\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"creationTime\",\n          key: \"creationTime\",\n          formatter: this.formatDate\n        },\n        {\n          title: \"订单状态\",\n          dataIndex: \"status\",\n          key: \"status\",\n          filters: [\n            { text: \"新增\", value: 1 },\n            { text: \"已付款\", value: 10 },\n            { text: \"已完成\", value: 20 }\n          ],\n          filterMethod(value, row) {\n            return row.isActive === value;\n          },\n          filterPlacement: \"bottom-end\"\n        },\n        {\n          title: \"上次登录时间\",\n          dataIndex: \"lastLoginTime\",\n          key: \"lastLoginTime\",\n          width: 240,\n          sortable: true,\n          formatter: this.formatDate\n        }\n      ],\n      data: [],\n      loading: true,\n      pagination: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 0,\n        layout: \"prev, pager, next, total\"\n      },\n      options: {\n        stripe: true\n      },\n      rowHandle: {\n        columnHeader: \"操作\",\n        edit: {\n          icon: \"el-icon-edit\",\n          text: \"编辑\",\n          size: \"small\"\n        },\n        remove: {\n          icon: \"el-icon-delete\",\n          text: \"删除\",\n          type: \"danger\",\n          size: \"small\",\n          disabled(index, row) {\n            if (row.OrdersName == \"admin\") {\n              return true;\n            }\n            return false;\n          }\n        }\n      },\n      formTemplate: {\n        OrdersName: {\n          title: \"用户名\",\n          component: {\n            name: \"el-input\",\n            disabled: true,\n            span: 12\n          }\n        },\n        id: {\n          title: \"ID\",\n          component: {\n            name: \"el-input\",\n            disabled: true,\n            span: 12\n          }\n        },\n        name: {\n          title: \"姓\",\n          component: {\n            name: \"el-input\",\n            clearable: true,\n            span: 6\n          }\n        },\n        surname: {\n          title: \"名\",\n          component: {\n            name: \"el-input\",\n            clearable: true,\n            span: 6\n          }\n        },\n        fullName: {\n          title: \"全称\",\n          component: {\n            name: \"el-input\",\n            disabled: true,\n            span: 6\n          }\n        },\n        emailAddress: {\n          title: \"邮箱\",\n          component: {\n            name: \"el-input\",\n            clearable: true\n          }\n        },\n        roleNames: {\n          title: \"角色\",\n          component: {\n            name: \"el-input\",\n            visible: false\n          },\n          visible: false\n        },\n        lastLoginTime: {\n          title: \"上次登录时间\",\n          component: {\n            name: \"el-date-picker\",\n            type: \"datetime\",\n            disabled: true,\n            span: 8\n          }\n        },\n        creationTime: {\n          title: \"创建时间\",\n          component: {\n            name: \"el-date-picker\",\n            type: \"datetime\",\n            disabled: true,\n            span: 8\n          }\n        },\n        isActive: {\n          title: \"有效\",\n          component: {\n            name: \"el-switch\"\n          }\n        }\n      },\n      formOptions: {\n        labelWidth: \"120px\",\n        labelPosition: \"right\",\n        saveLoading: false\n      },\n      formRules: {\n        OrdersName: [\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" }\n        ],\n        name: [{ required: true, message: \"请输入姓\", trigger: \"blur\" }],\n        surname: [{ required: true, message: \"请输入名\", trigger: \"blur\" }],\n        emailAddress: [\n          { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  mounted() {\n    this.fetchData(this.pagination.currentPage, this.pagination.pageSize);\n  },\n  methods: {\n    ...mapActions(\"d2admin/orders\", [\n      \"GetAllOrders\",\n      \"OrdersCreateOrUpdate\",\n      \"OrdersDel\"\n    ]),\n    paginationCurrentChange(currentPage) {\n      this.pagination.currentPage = currentPage;\n      this.fetchData(currentPage, this.pagination.pageSize);\n    },\n    formatDate(row, column, cellValue, index) {\n      var timestr = new Date(cellValue);\n      return util.Dtformat(\"yyyy-MM-dd hh:mm:ss\", timestr);\n    },\n    fetchData(page, pageSize) {\n      this.loading = true;\n      this.GetAllOrders({\n        SkipCount: (page - 1) * pageSize,\n        MaxResultCount: pageSize\n      })\n        .then(res => {\n          this.data = res.result;\n          this.pagination.total = res.result.length;\n          this.loading = false;\n        })\n        .catch(err => {\n          console.log(\"err\", err);\n          this.loading = false;\n        });\n    },\n    handleRowAdd(row, done) {\n      this.formOptions.saveLoading = true;\n      this.OrdersCreateOrUpdate(row).then(async res => {\n        console.log(res);\n        this.$message({\n          message: \"保存成功\",\n          type: \"success\"\n        });\n      });\n      done({\n        address: \"我是通过done事件传入的数据！\"\n      });\n      this.formOptions.saveLoading = false;\n    },\n    handleDialogCancel(done) {\n      this.$message({\n        message: \"取消保存\",\n        type: \"warning\"\n      });\n      done();\n    },\n    handleDialogEdit(datas, done) {\n      this.formOptions.saveLoading = true;\n      this.OrdersCreateOrUpdate(datas.row).then(async res => {\n        console.log(res);\n        this.$message({\n          message: \"保存成功\",\n          type: \"success\"\n        });\n      });\n      this.formOptions.saveLoading = false;\n      done();\n    },\n    handleRowRemove({ index, row }, done) {\n      this.OrdersDel({ id: row.id }).then(async res => {\n        this.$message({\n          message: \"删除成功\",\n          type: \"success\"\n        });\n      });\n      done();\n    },\n    handleSelectionChange(selection) {\n      console.log(selection);\n    },\n    refreshData() {\n      this.loading = true;\n      this.fetchData(this.pagination.currentPage, this.pagination.pageSize);\n    },\n    handleAddDialog() {\n      console.log(AddDialog);\n      AddDialog.dialogFormVisible = true;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"./Orders.scss\";\n</style>\n"],"sourceRoot":"src/pages/Orders"}]}