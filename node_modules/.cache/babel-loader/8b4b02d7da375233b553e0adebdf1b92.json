{"remainingRequest":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/babel-loader/lib/index.js!/home/user1/桌面/vue/D2AdminICE-master/node_modules/eslint-loader/index.js??ref--13-0!/home/user1/桌面/vue/D2AdminICE-master/src/libs/util.ice.js","dependencies":[{"path":"/home/user1/桌面/vue/D2AdminICE-master/src/libs/util.ice.js","mtime":1557910292521},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/user1/\\u684C\\u9762/vue/D2AdminICE-master/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nvar util = {};\n/**\n * @description 路由配置扁平化\n * @param {Array} config 层级路由设置\n */\n\nutil.recursiveRouterConfig = function recursiveRouterConfig() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var routerMap = [];\n  /**\n   * path -> name\n   * @param {String} path path\n   */\n\n  function path2name() {\n    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return path.split('/').filter(function (e) {\n      return e;\n    }).join('-');\n  }\n  /**\n   * recursive\n   * @param {Array} con config\n   */\n\n\n  function recursive(con) {\n    con.forEach(function (item) {\n      var route = item.layout ? {\n        // -> 在主布局内的页面\n        // 页面地址\n        path: item.path,\n        // 使用的布局\n        component: item.layout,\n        // 子路由 一个里面只会有一个子路由 并且 path = ‘’\n        children: [{\n          // 这里留空 访问上面父级地址的时候会自动跳到这里\n          path: '',\n          // 如果路由没有设置 name 就用 path 处理成name\n          name: item.name || path2name(item.path),\n          // 忽略标签页选项\n          hidden: item.hidden || false,\n          // meta 设置和默认值合并\n          meta: Object.assign({\n            requiresAuth: true,\n            title: path2name(item.path)\n          }, item.meta),\n          // 页面组件\n          component: item.component\n        }]\n      } : {\n        // -> 不在主布局内的页面\n        // 页面地址\n        path: item.path,\n        // 如果路由没有设置 name 就用 path 处理成name\n        name: item.name || path2name(item.path),\n        // meta 设置和默认值合并\n        meta: Object.assign({\n          requiresAuth: true,\n          title: path2name(item.path)\n        }, item.meta),\n        // 页面组件\n        component: item.component\n      };\n\n      if (Array.isArray(item.children)) {\n        recursive(item.children);\n      }\n\n      routerMap.push(route);\n    });\n    return routerMap;\n  }\n\n  return recursive(config);\n};\n/**\n * @description 转换菜单数据\n * @param {Array} arr menu config\n */\n\n\nutil.recursiveMenuConfig = function recursiveMenuConfig(arr) {\n  var res = [];\n  /**\n   * 转换每个菜单对象上的 name 为 title\n   * @param {Object} obj menu\n   */\n\n  function convert(obj) {\n    var name = obj.name,\n        path = obj.path,\n        icon = obj.icon,\n        children = obj.children;\n    return _objectSpread({\n      title: name,\n      icon: icon,\n      path: path\n    }, children ? {\n      children: children.map(convert)\n    } : {});\n  }\n\n  arr.forEach(function (menu) {\n    res.push(convert(menu));\n  });\n  return res;\n};\n\nexport default util;",{"version":3,"sources":["/home/user1/桌面/vue/D2AdminICE-master/src/libs/util.ice.js"],"names":["util","recursiveRouterConfig","config","routerMap","path2name","path","split","filter","e","join","recursive","con","forEach","item","route","layout","component","children","name","hidden","meta","Object","assign","requiresAuth","title","Array","isArray","push","recursiveMenuConfig","arr","res","convert","obj","icon","map","menu"],"mappings":"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","sourcesContent":["const util = {}\n\n/**\n * @description 路由配置扁平化\n * @param {Array} config 层级路由设置\n */\nutil.recursiveRouterConfig = function recursiveRouterConfig (config = []) {\n  const routerMap = []\n  /**\n   * path -> name\n   * @param {String} path path\n   */\n  function path2name (path = '') {\n    return path.split('/').filter(e => e).join('-')\n  }\n  /**\n   * recursive\n   * @param {Array} con config\n   */\n  function recursive (con) {\n    con.forEach((item) => {\n      const route = item.layout ? {\n        // -> 在主布局内的页面\n        // 页面地址\n        path: item.path,\n        // 使用的布局\n        component: item.layout,\n        // 子路由 一个里面只会有一个子路由 并且 path = ‘’\n        children: [\n          {\n            // 这里留空 访问上面父级地址的时候会自动跳到这里\n            path: '',\n            // 如果路由没有设置 name 就用 path 处理成name\n            name: item.name || path2name(item.path),\n            // 忽略标签页选项\n            hidden: item.hidden || false,\n            // meta 设置和默认值合并\n            meta: Object.assign({\n              requiresAuth: true,\n              title: path2name(item.path)\n            }, item.meta),\n            // 页面组件\n            component: item.component\n          }\n        ]\n      } : {\n        // -> 不在主布局内的页面\n        // 页面地址\n        path: item.path,\n        // 如果路由没有设置 name 就用 path 处理成name\n        name: item.name || path2name(item.path),\n        // meta 设置和默认值合并\n        meta: Object.assign({\n          requiresAuth: true,\n          title: path2name(item.path)\n        }, item.meta),\n        // 页面组件\n        component: item.component\n      }\n      if (Array.isArray(item.children)) {\n        recursive(item.children)\n      }\n      routerMap.push(route)\n    })\n    return routerMap\n  }\n  return recursive(config)\n}\n\n/**\n * @description 转换菜单数据\n * @param {Array} arr menu config\n */\nutil.recursiveMenuConfig = function recursiveMenuConfig (arr) {\n  const res = []\n  /**\n   * 转换每个菜单对象上的 name 为 title\n   * @param {Object} obj menu\n   */\n  function convert (obj) {\n    const {\n      name, path, icon, children\n    } = obj\n    return {\n      title: name,\n      icon,\n      path,\n      ...children ? { children: children.map(convert) } : {}\n    }\n  }\n  arr.forEach((menu) => {\n    res.push(convert(menu))\n  })\n  return res\n}\n\nexport default util\n"]}]}