{"remainingRequest":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/babel-loader/lib/index.js!/home/user1/桌面/vue/D2AdminICE-master/node_modules/eslint-loader/index.js??ref--13-0!/home/user1/桌面/vue/D2AdminICE-master/src/routerConfig.js","dependencies":[{"path":"/home/user1/桌面/vue/D2AdminICE-master/src/routerConfig.js","mtime":1558430957608},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user1/桌面/vue/D2AdminICE-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/* eslint-disable */\n// 工具\nimport util from '@/libs/util.ice'; // 页面和布局\n\nimport Index from \"./pages/Index\";\nimport Login from \"./pages/Login\";\nimport Error404 from \"./pages/Error404\";\nimport Demo1 from \"./pages/Demo1\";\nimport Demo2 from \"./pages/Demo2\";\nimport Contents from \"./pages/Contents\";\nimport Tenants from \"./pages/Tenants\";\nimport Users from \"./pages/Users\";\nimport Config from \"./pages/Config\";\nimport Department from \"./pages/Department\";\nimport Members from \"./pages/Members\";\nimport Powers from \"./pages/Powers\";\nimport Categories from \"./pages/Categories\";\nimport Dashboard from \"./pages/Dashboard\";\nimport HeaderAside from \"./layouts/HeaderAside\";\nimport Orders from \"./pages/Orders\"; // 变量名 routerConfig 为 iceworks 检测关键字\n// ice 会自动在这个变量下添加路由数据\n// 请不要修改名称\n// 备注 ice 自动添加的路由记录是以下格式\n// {\n//   path: '/page4',\n//   layout: d2LayoutMain,\n//   component: 4\n// }\n// 如果不指定 name 字段，会根据 path 生成 name = page-demo1\n// 转换规则见 util.recursiveRouterConfig 中 path2name 方法\n// meta 字段会和默认值使用 Object.assign 合并\n// 如果不指定 meta.name 的话，name 字段会使用和上面路由 name 一样的取值逻辑\n// 下面两个页面就是对比 你可以分别观察两个页面上显示的路由数据差异\n\nvar routerConfig = [{\n  path: '/Contents',\n  layout: HeaderAside,\n  component: Contents,\n  meta: {\n    requiresAuth: true,\n    title: '内容管理'\n  }\n}, // 首页 必须 name:index\n{\n  path: '/',\n  name: 'index',\n  layout: HeaderAside,\n  component: Index\n}, // 页面重定向 必须保留\n{\n  path: '/redirect/:route*',\n  name: 'redirect',\n  layout: HeaderAside,\n  hidden: true,\n  component: {\n    beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n      next(function (vm) {\n        return vm.$router.replace(JSON.parse(from.params.route));\n      });\n    },\n    render: function render(h) {\n      return h();\n    }\n  }\n}, {\n  path: '/demo1',\n  name: 'demo1',\n  layout: HeaderAside,\n  component: Demo1,\n  meta: {\n    requiresAuth: true,\n    title: '设置'\n  }\n}, {\n  path: '/demo2',\n  layout: HeaderAside,\n  component: Demo2,\n  meta: {\n    requiresAuth: true,\n    title: '全局概况'\n  }\n}, // 刷新页面 必须保留\n{\n  path: '/refresh',\n  name: 'refresh',\n  layout: HeaderAside,\n  hidden: true,\n  component: {\n    beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n      next(function (vm) {\n        return vm.$router.replace(from.fullPath);\n      });\n    },\n    render: function render(h) {\n      return h();\n    }\n  }\n}, {\n  path: '/Tenants',\n  layout: HeaderAside,\n  component: Tenants,\n  meta: {\n    requiresAuth: true,\n    title: '租户管理'\n  }\n}, {\n  path: '/Users',\n  layout: HeaderAside,\n  component: Users,\n  meta: {\n    requiresAuth: true,\n    title: '管理员'\n  }\n}, {\n  path: '/Config',\n  layout: HeaderAside,\n  component: Config,\n  meta: {\n    requiresAuth: true,\n    title: '系统设置'\n  }\n}, {\n  path: '/Department',\n  layout: HeaderAside,\n  component: Department,\n  meta: {\n    requiresAuth: true,\n    title: '部门设置'\n  }\n}, {\n  path: '/Members',\n  layout: HeaderAside,\n  component: Members,\n  meta: {\n    requiresAuth: true,\n    title: '用户管理'\n  }\n}, {\n  path: '/Powers',\n  layout: HeaderAside,\n  component: Powers,\n  meta: {\n    requiresAuth: true,\n    title: '权限设置'\n  }\n}, {\n  path: '/Categories',\n  layout: HeaderAside,\n  component: Categories,\n  meta: {\n    requiresAuth: true,\n    title: '分类设置'\n  }\n}, {\n  path: '/Dashboard',\n  layout: HeaderAside,\n  component: Dashboard,\n  meta: {\n    requiresAuth: true,\n    title: '控制台'\n  }\n}, {\n  path: '/Orders',\n  layout: HeaderAside,\n  component: Orders,\n  meta: {\n    requiresAuth: true,\n    title: '订单管理'\n  }\n}]; // 不参与菜单显示的\n// ice 不会处理这部分\n// 但是这部分路由也会被注册\n// 处理规则同 routerConfig\n\nvar routerConfigMenuOut = [// 登录\n{\n  path: '/login',\n  name: 'login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, // 404\n{\n  path: '*',\n  component: Error404\n}]; // 导出全部路由设置\n// 这个数据会在 router.js 中被扁平处理\n\nexport default util.recursiveRouterConfig([].concat(routerConfig, routerConfigMenuOut)); // 导出参与多标签页处理的路由设置\n// 这个数据会在 mian.js 中使用\n\nexport var frameInRoutes = util.recursiveRouterConfig(routerConfig).map(function (e) {\n  var route = e.children ? e.children[0] : e;\n  return {\n    path: e.path,\n    name: route.name,\n    hidden: route.hidden,\n    meta: route.meta\n  };\n});",{"version":3,"sources":["/home/user1/桌面/vue/D2AdminICE-master/src/routerConfig.js"],"names":["util","Index","Login","Error404","Demo1","Demo2","Contents","Tenants","Users","Config","Department","Members","Powers","Categories","Dashboard","HeaderAside","Orders","routerConfig","path","layout","component","meta","requiresAuth","title","name","hidden","beforeRouteEnter","to","from","next","vm","$router","replace","JSON","parse","params","route","render","h","fullPath","routerConfigMenuOut","recursiveRouterConfig","frameInRoutes","map","e","children"],"mappings":"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","sourcesContent":["/* eslint-disable */\n// 工具\nimport util from '@/libs/util.ice'; // 页面和布局\n\nimport Index from './pages/Index';\nimport Login from './pages/Login';\nimport Error404 from './pages/Error404';\nimport Demo1 from './pages/Demo1';\nimport Demo2 from './pages/Demo2';\nimport Contents from './pages/Contents';\nimport Tenants from './pages/Tenants';\nimport Users from './pages/Users';\nimport Config from './pages/Config';\nimport Department from './pages/Department';\nimport Members from './pages/Members';\nimport Powers from './pages/Powers';\nimport Categories from './pages/Categories';\nimport Dashboard from './pages/Dashboard';\nimport HeaderAside from './layouts/HeaderAside'; \nimport Orders from './pages/Orders';\n// 变量名 routerConfig 为 iceworks 检测关键字\n// ice 会自动在这个变量下添加路由数据\n// 请不要修改名称\n// 备注 ice 自动添加的路由记录是以下格式\n// {\n//   path: '/page4',\n//   layout: d2LayoutMain,\n//   component: 4\n// }\n// 如果不指定 name 字段，会根据 path 生成 name = page-demo1\n// 转换规则见 util.recursiveRouterConfig 中 path2name 方法\n// meta 字段会和默认值使用 Object.assign 合并\n// 如果不指定 meta.name 的话，name 字段会使用和上面路由 name 一样的取值逻辑\n// 下面两个页面就是对比 你可以分别观察两个页面上显示的路由数据差异\n\nconst routerConfig = [\n  {\n    path: '/Contents',\n    layout: HeaderAside,\n    component: Contents,\n    meta: {\n      requiresAuth: true,\n      title: '内容管理',\n    },\n  }, // 首页 必须 name:index\n  {\n    path: '/',\n    name: 'index',\n    layout: HeaderAside,\n    component: Index,\n  }, // 页面重定向 必须保留\n  {\n    path: '/redirect/:route*',\n    name: 'redirect',\n    layout: HeaderAside,\n    hidden: true,\n    component: {\n      beforeRouteEnter(to, from, next) {\n        next(vm => vm.$router.replace(JSON.parse(from.params.route)));\n      },\n\n      render: h => h(),\n    },\n  },\n  {\n    path: '/demo1',\n    name: 'demo1',\n    layout: HeaderAside,\n    component: Demo1,\n    meta: {\n      requiresAuth: true,\n      title: '设置',\n    },\n  },\n  {\n    path: '/demo2',\n    layout: HeaderAside,\n    component: Demo2,\n    meta: {\n      requiresAuth: true,\n      title: '全局概况',\n    },\n  }, // 刷新页面 必须保留\n  {\n    path: '/refresh',\n    name: 'refresh',\n    layout: HeaderAside,\n    hidden: true,\n    component: {\n      beforeRouteEnter(to, from, next) {\n        next(vm => vm.$router.replace(from.fullPath));\n      },\n\n      render: h => h(),\n    },\n  },\n  {\n    path: '/Tenants',\n    layout: HeaderAside,\n    component: Tenants,\n    meta: {\n      requiresAuth: true,\n      title: '租户管理',\n    },\n  },\n  {\n    path: '/Users',\n    layout: HeaderAside,\n    component: Users,\n    meta: {\n      requiresAuth: true,\n      title: '管理员',\n    },\n  },\n  {\n    path: '/Config',\n    layout: HeaderAside,\n    component: Config,\n    meta: {\n      requiresAuth: true,\n      title: '系统设置',\n    },\n  },\n  {\n    path: '/Department',\n    layout: HeaderAside,\n    component: Department,\n    meta: {\n      requiresAuth: true,\n      title: '部门设置',\n    },\n  },\n  {\n    path: '/Members',\n    layout: HeaderAside,\n    component: Members,\n    meta: {\n      requiresAuth: true,\n      title: '用户管理',\n    },\n  },\n  {\n    path: '/Powers',\n    layout: HeaderAside,\n    component: Powers,\n    meta: {\n      requiresAuth: true,\n      title: '权限设置',\n    },\n  },\n  {\n    path: '/Categories',\n    layout: HeaderAside,\n    component: Categories,\n    meta: {\n      requiresAuth: true,\n      title: '分类设置',\n    },\n  },\n  {\n    path: '/Dashboard',\n    layout: HeaderAside,\n    component: Dashboard,\n    meta: {\n      requiresAuth: true,\n      title: '控制台',\n    },\n  },{\n    path:'/Orders',\n    layout:HeaderAside,\n    component:Orders,\n    meta:{\n      requiresAuth:true,\n      title:'订单管理'\n    }\n  }\n]; // 不参与菜单显示的\n// ice 不会处理这部分\n// 但是这部分路由也会被注册\n// 处理规则同 routerConfig\n\nconst routerConfigMenuOut = [\n  // 登录\n  {\n    path: '/login',\n    name: 'login',\n    component: Login,\n    meta: {\n      requiresAuth: false,\n    },\n  }, // 404\n  {\n    path: '*',\n    component: Error404,\n  },\n]; // 导出全部路由设置\n// 这个数据会在 router.js 中被扁平处理\n\nexport default util.recursiveRouterConfig([\n  ...routerConfig,\n  ...routerConfigMenuOut,\n]); // 导出参与多标签页处理的路由设置\n// 这个数据会在 mian.js 中使用\n\nexport const frameInRoutes = util.recursiveRouterConfig(routerConfig).map(e => {\n  const route = e.children ? e.children[0] : e;\n  return {\n    path: e.path,\n    name: route.name,\n    hidden: route.hidden,\n    meta: route.meta,\n  };\n});\n"]}]}